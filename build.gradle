plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id "org.sonarqube" version '3.0'
	id 'jacoco'
}

group = 'app.kartik.demos'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Framework Dependencies
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	// Libraries needed for code compilation
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.2'

	// Libraries needed for test code compilation
	testCompile group: 'junit', name: 'junit', version: '4.12'
}

test {
	testLogging.showStandardStreams = true
	useJUnitPlatform()
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled false
        csv.enabled false
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport

sonarqube {
	properties {
		property "sonar.projectKey", 'dearjadu_sundarban'
		property "sonar.organization", 'kartik-app'
		property "sonar.host.url", 'https://sonarcloud.io'
	}
}

